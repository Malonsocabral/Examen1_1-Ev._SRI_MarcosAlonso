services:
  servidor:
    container_name: servidor_DNS  # Nome do contedor para o servidor DNS
    image: ubuntu/bind9  # Imaxe base que proporciona BIND9 para configurar DNS
    platform: linux/amd64  # Especificamos a plataforma, útil para evitar conflitos en máquinas ARM
    ports:
      - 54:53  # Mapeamos o porto 54 do host ao porto 53 (DNS) do contedor
    networks:
      redcompartida:  # Engadimos o contedor á rede personalizada 'bind9_subnet'
        ipv4_address: 172.16.0.4  # Enderezo IP estático asignado ao servidor DNS
    volumes:
      - ./conf:/etc/bind/  # Montamos o directorio local './conf' dentro do contedor como '/etc/bind'
      - ./zonas:/var/lib/bind/  # Montamos o directorio local './zonas' dentro do contedor como '/var/lib/bind'

  cliente:
    container_name: cliente_ubuntu  # Nome do contedor para o cliente
    image: ubuntu  # Imaxe base Ubuntu para o cliente
    tty: true  # Permite acceso interactivo ao terminal
    stdin_open: true  # Mantén stdin aberto para interacción
    dns:
      - 172.16.0.4  # Configuramos o servidor DNS do cliente apuntando ao IP do servidor DNS
    networks:
      redcompartida:  # Engadimos o contedor á rede personalizada 'bind9_subnet'
        ipv4_address: 172.16.0.2  # Enderezo IP estático asignado ao cliente
    command: /bin/bash -c "apt-get update && apt-get install -y dnsutils && bash" 
    # O comando fai un apt update, instala dnsutils (inclúe dig) e abre un bash interactivo.
networks:
  redcompartida:  # Definimos unha rede personalizada chamada 'bind9_subnet'
    driver: bridge  # Tipo de rede: 'bridge', conecta os contedores nunha rede virtual
    ipam:
      config:
      - subnet: "172.16.0.0/16"  # Rango de IPs dispoñibles na subrede
        ip_range: "172.16.0.0/24"  # Rango específico asignado aos contedores
        gateway: "172.16.0.254"  # Porta de enlace para a subrede
